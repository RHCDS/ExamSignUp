DROP DATABASE IF EXISTS EXAMSIGNUP;
DROP USER EXAMSIGNUP;
##创建数据库
CREATE DATABASE EXAMSIGNUP; 
##远程登录
CREATE USER 'EXAMSIGNUP'@'%' IDENTIFIED BY 'hduegov';
GRANT ALL PRIVILEGES ON EXAMSIGNUP.* TO 'EXAMSIGNUP'@'%';
##刷新权限
FLUSH PRIVILEGES;
SHOW GRANTS FOR 'EXAMSIGNUP'@'%';

##Disable foreign key checks
##SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;

##Re-enable foreign key checks
##SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;

##End of script

USE EXAMSIGNUP;
################################
CREATE TABLE EX_INSTITUTION
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	INSTITUTIONNUM VARCHAR(10) UNIQUE COMMENT '机构代码' ,
	NAME VARCHAR(255) COMMENT '机构名称',
	##注意！！！！！！！！此处Category已有种类为school,province,city，这里没用枚举，自重!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	CATEGORY VARCHAR(255) COMMENT '机构类别',
	CONTACT TEXT COMMENT '联系人，联系方式等',
	REMARK TEXT COMMENT '备注',
	HIGHERID VARCHAR(36) COMMENT '上级机构ID'，
	INSTITUTIONSTATUSID VARCHAR(36) COMMENT '机构所处状态'
	SIGNUPFLAG ENUM('0','1') COMMENT '能否报名标记',
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
CREATE INDEX INDEX_INSTITUTION_INSTITUTIONNUM ON EX_INSTITUTION(INSTITUTIONNUM);
ALTER TABLE EX_INSTITUTION ADD CONSTRAINT FK_INSTITUTION_HIGHERID FOREIGN KEY(HIGHERID) REFERENCES EX_INSTITUTION(ID);
ALTER TABLE EX_INSTITUTION ADD CONSTRAINT FK_EX_INSTITUTIONSTATUS_EX_INSTITUTIONSTATUSID FOREIGN KEY(INSTITUTIONSTATUSID) REFERENCES EX_INSTITUTIONSTATUS(ID);
################################
/*
 * 可以使用级联删除
 * */
CREATE TABLE EX_CAMPUS
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	CAMPUSNUM VARCHAR(10) COMMENT '校区代码',
	NAME VARCHAR(255) COMMENT '校区名称',
	REMARK TEXT COMMENT '备注',
	INSTITUTIONID VARCHAR(36) COMMENT '校区所属机构ID(学校ID)'
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
ALTER TABLE EX_CAMPUS ADD CONSTRAINT FK_CAMPUS_INSTITUTIONID FOREIGN KEY(INSTITUTIONID) REFERENCES EX_INSTITUTION(ID);
################################
CREATE TABLE EX_COLLEGE
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	COLLEGENUM VARCHAR(10) COMMENT '院系代码',
	NAME VARCHAR(255) COMMENT '院系名称',
	REMARK TEXT COMMENT '备注',
	INSTITUTIONID VARCHAR(36) COMMENT '院系所属机构ID(学校ID)'
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
ALTER TABLE EX_COLLEGE ADD CONSTRAINT FK_COLLEGE_INSTITUTIONID FOREIGN KEY(INSTITUTIONID) REFERENCES EX_INSTITUTION(ID);
################################
CREATE TABLE EX_PROFESSION
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	PROFESSIONNUM VARCHAR(10) COMMENT '专业代码',
	NAME VARCHAR(255) COMMENT '专业名称',
	REMARK TEXT COMMENT '备注',
	INSTITUTIONID VARCHAR(36) COMMENT '院系所属机构ID(学校ID)'
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
ALTER TABLE EX_CAMPUS ADD CONSTRAINT FK_PROFESSION_INSTITUTIONID FOREIGN KEY(INSTITUTIONID) REFERENCES EX_INSTITUTION(ID);
################################
CREATE TABLE EX_LANGUAGE
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	LANGUAGENUM VARCHAR(10) COMMENT '语种编号',
	NAME VARCHAR(255) COMMENT '考试名称',
	THEORYFLAG ENUM('0','1') COMMENT '理论考标记',
	OPERATEFLAG ENUM('0','1') COMMENT '上机考标记',
	THEORYLENGTH INT UNSIGNED COMMENT '理论考试时间长度',
	OPERATELENGTH INT UNSIGNED COMMENT '上机考试时间长度'
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
################################
CREATE TABLE EX_ROLE
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	ROLENUM INT UNSIGNED COMMENT '角色编号,角色编号0为最高权限，高权限者拥有控制低权限者的权利',
	NAME VARCHAR(255) COMMENT '角色名称',
	REMARK TEXT  COMMENT '备注'
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
################################
CREATE TABLE EX_USER
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	LOGINNAME VARCHAR(255) NOT NULL UNIQUE COMMENT '登录名',
	PASSWORD VARCHAR(255) COMMENT '登录密码',
	NAME VARCHAR(255) COMMENT '姓名',
	CONTACTNUM VARCHAR(255) COMMENT '联系电话',
	INSTITUTIONID VARCHAR(36) COMMENT '所属机构ID',
	ROLEID VARCHAR(36) COMMENT '角色ID'
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
ALTER TABLE EX_USER ADD CONSTRAINT FK_USER_INSTITUTIONID FOREIGN KEY(INSTITUTIONID) REFERENCES EX_INSTITUTION(ID);
ALTER TABLE EX_USER ADD CONSTRAINT FK_USER_ROLEID FOREIGN KEY(ROLEID) REFERENCES EX_ROLE(ID);
ALTER TABLE EX_USER ADD UNIQUE(LOGINNAME);
################################
CREATE TABLE EX_PHYSICEXAMROOM
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	ROOMLOCATION VARCHAR(255) COMMENT '物理考场',
	CAPACITY INT UNSIGNED COMMENT '考场容量(人)',
	THEORYFLAG ENUM('0','1') COMMENT '理论考标记',
	OPERATEFLAG ENUM('0','1') COMMENT '上机考标记',
	INSTITUTIONID VARCHAR(36) COMMENT '机构代码',
	CAMPUSID VARCHAR(36) COMMENT '教室所在校区'
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
ALTER TABLE EX_PHYSICEXAMROOM ADD CONSTRAINT FK_PHYSICEXAMROOM_INSTITUTIONID FOREIGN KEY(INSTITUTIONID) REFERENCES EX_INSTITUTION(ID);
ALTER TABLE EX_PHYSICEXAMROOM ADD CONSTRAINT FK_PHYSICEXAMROOM_CAMPUSID FOREIGN KEY(CAMPUSID) REFERENCES EX_CAMPUS(ID);

################################
 /* 理论考试默认只有一个场次且全省统一，上机考试可以在同一天安排多个场次
 * 且AOP，C，JAVA等上机考试的时间区段都相同
 * 理论考试在同一个SECTION内完成
 * 每个场次一条记录
 * 上机考试则按照机房所能容量考生的数量来计算SECTION（机房能考所有语种），假设
 * 某学校有5机房，总共C语言上机有2000考生，A（100），B（90），C（50），D（100），E（50）
 * 则一个场次总共390个容量，则至少需要考6个场次，剩余的机房则可以安排其他考生进行考试，
 * 该时段的考试时间按照该时段包含的语种中考试时间最长的时段进行设置。
 * 然后开始第7场次
 */
CREATE TABLE EX_SECTION
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	SECTIONNUM INT UNSIGNED COMMENT '场次编号',
	THEORYFLAG ENUM('0','1') COMMENT '理论考标记',
	OPERATEFLAG ENUM('0','1') COMMENT '上机考标记',
	STARTTIME DATETIME COMMENT '考试开始时间',
	INSTITUTIONID VARCHAR(36) COMMENT '机构代码'
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
ALTER TABLE EX_SECTION ADD CONSTRAINT FK_SECTION_INSTITUTIONID FOREIGN KEY(INSTITUTIONID) REFERENCES EX_INSTITUTION(ID);
################################
/*
 * 逻辑考场安排表
 * 用于将场次，物理试场，与准考证号区段进行对应
*/

CREATE TABLE EX_ARRANGEMENT
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	SECTIONID VARCHAR(36) COMMENT '场次ID',
	PHYSICEXAMROOMID VARCHAR(36) COMMENT '物理考场id',
	LANGUAGEID VARCHAR(36) COMMENT '语种ID',
	INSTITUTIONID VARCHAR(36) COMMENT '机构代码',
	STARTEXAMNUM VARCHAR(15) COMMENT '起始准考证号 GROUP BY EXAMNUM',
	ENDEXAMNUM VARCHAR(15) COMMENT '终止准考证号'
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
ALTER TABLE EX_ARRANGEMENT ADD CONSTRAINT FK_ARRANGEMENT_EX_PHYSICEXAMROOMID FOREIGN KEY(PHYSICEXAMROOMID) REFERENCES EX_PHYSICEXAMROOM(ID);
ALTER TABLE EX_ARRANGEMENT ADD CONSTRAINT FK_ARRANGEMENT_EX_SECTIONID FOREIGN KEY(SECTIONID) REFERENCES EX_SECTION(ID);
ALTER TABLE EX_ARRANGEMENT ADD CONSTRAINT FK_ARRANGEMENT_EX_LANGUAGEID FOREIGN KEY(LANGUAGEID) REFERENCES EX_LANGUAGE(ID);
ALTER TABLE EX_ARRANGEMENT ADD CONSTRAINT FK_ARRANGEMENT_INSTITUTIONIDID FOREIGN KEY(INSTITUTIONID) REFERENCES EX_INSTITUTION(ID);
################################
CREATE TABLE EX_SUPERVISOR
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	NAME VARCHAR(255)  COMMENT '监考人姓名',
	SUPERVISORNUM VARCHAR(50) COMMENT '教工号',
	CONTACT TEXT  COMMENT '联系方式',
	THEORYFLAG ENUM('0','1') COMMENT '理论考标记',
	OPERATEFLAG ENUM('0','1') COMMENT '上机考标记',
	INSTITUTIONID VARCHAR(36) COMMENT '所属机构',
	COLLEGEID VARCHAR(36) COMMENT '学院',
	PRIMARYFLAG ENUM('0','1') COMMENT '主考官标记',
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
ALTER TABLE EX_SUPERVISOR ADD CONSTRAINT FK_SUPERVISOR_INSTITUTIONID FOREIGN KEY(INSTITUTIONID) REFERENCES EX_INSTITUTION(ID);
ALTER TABLE EX_SUPERVISOR ADD CONSTRAINT FK_SUPERVISOR_COLLEGEID FOREIGN KEY(COLLEGEID) REFERENCES EX_COLLEGE(ID);
################################
CREATE TABLE EX_ARRANGE_SUPERVISOR
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	SUPERVISORID VARCHAR(36) COMMENT '监考老师ID',
	ARRANGEMENTID VARCHAR(36) COMMENT '考场安排表ID',
	INSTITUTIONID VARCHAR(36) COMMENT '所属机构ID',
	LOGICEXAMROOMNUM VARCHAR(36)  COMMENT '逻辑考场编号,此字段为非必填字段！！！！！！！！'
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
ALTER TABLE EX_ARRANGE_SUPERVISOR ADD CONSTRAINT FK_ARRANGESUPERVISOR_SUPERVISORID FOREIGN KEY(SUPERVISORID) REFERENCES EX_SUPERVISOR(ID);
ALTER TABLE EX_ARRANGE_SUPERVISOR ADD CONSTRAINT FK_ARRANGESUPERVISOR_ARRANGEMENTID FOREIGN KEY(ARRANGEMENTID) REFERENCES EX_ARRANGEMENT(ID);
ALTER TABLE EX_ARRANGE_SUPERVISOR ADD CONSTRAINT FK_ARRANGESUPERVISOR_INSTITUTIONID FOREIGN KEY(INSTITUTIONID) REFERENCES EX_INSTITUTION(ID);
################################
CREATE TABLE EX_NEWS
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	TITLE VARCHAR(255) COMMENT '新闻标题',
	PUBLISHER VARCHAR(255) COMMENT '发布方',
	INSTITUTIONID VARCHAR(36) COMMENT '机构ID',
	CONTENT TEXT COMMENT '发布内容',
	BEGINDATE DATETIME COMMENT '内容生效时间',
	ENDDATE DATETIME COMMENT '内容过期时间'
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
ALTER TABLE EX_NEWS ADD CONSTRAINT FK_NEWS_INSTITUTIONID FOREIGN KEY(INSTITUTIONID) REFERENCES EX_INSTITUTION(ID);
################################
CREATE TABLE EX_STUDENTSTATUS
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	STATUSNUM INT UNSIGNED COMMENT '状态编码',
	NAME VARCHAR(255) COMMENT '状态名称',
	STARTTIME DATETIME COMMENT '状态起始时间',
	ENDTIME DATETIME COMMENT '状态结束时间',
	INSTITUTIONID VARCHAR(36) COMMENT '机构ID不同学校可能起止时间不同',
	REMARKS TEXT COMMENT '备注'
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
ALTER TABLE EX_STUDENTSTATUS ADD CONSTRAINT FK_STUDENTSTATUS_INSTITUTIONID FOREIGN KEY(INSTITUTIONID) REFERENCES EX_INSTITUTION(ID);
################################
CREATE TABLE EX_INSTITUTIONSTATUS
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	STATUSNUM INT UNSIGNED UNIQUE COMMENT '状态编码',#此字段用于获得某一条记录，一旦分配不得更改，切记！
	NAME VARCHAR(255) COMMENT '状态名称',
	STARTTIME DATETIME COMMENT '状态起始时间' DEFAULT 'NOW()',
	ENDTIME DATETIME COMMENT '状态结束时间' DEFAULT 'NOW()',
	ALTERMESSAGE VARCHAR(255) COMMENT '转入下一状态的提示语',
	ROLENAME VARCHAR (255) COMMENT '权限可控角色名称',#此字段直接被加载到HQL中school,cityManager,provinceManager
	INDEXNUM INT UNSIGNED UNIQUE COMMENT '此字段用于排序，可以调整顺序',
	REMARKS TEXT COMMENT '备注'
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
################################
CREATE TABLE EX_STUDENT
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	NAME VARCHAR(255) COMMENT '学生姓名',
	PASSWORD VARCHAR(255) COMMENT '密码',
	SEX ENUM('M','F') COMMENT '性别 男M 女F',
	STUDENTNUM VARCHAR(50) COMMENT '学号',
	IDNUM VARCHAR(18) COMMENT '身份证号',
	ETHNO VARCHAR(100) COMMENT '民族',
	EXAMNUM VARCHAR(15) COMMENT '准考证号',
	EXAMBATCH VARCHAR(5) COMMENT '考试批次121',
	GRADE VARCHAR(15) COMMENT '年级',
	CLASSNUM VARCHAR(15) COMMENT '行政班代码',
	LENGTHOFYEAR VARCHAR(10) COMMENT '学制',
	STUDENTCATEGORY VARCHAR(10) COMMENT '考生类别',
	PAIED ENUM('0','1') COMMENT '是否缴费',
	SCORE DECIMAL(5,2) COMMENT '分数',
	NEWSCORE DECIMAL(5,2) COMMENT'查分所得分数',
	THEORYABSENT ENUM('0','1') COMMENT '理论缺考',
	OPERATEABSENT ENUM('0','1') COMMENT '上机缺考',
	THEORYFRAUD ENUM('0','1') COMMENT '理论作弊',
	OPERATEFRAUD ENUM('0','1') COMMENT '上机作弊',
	PROFESSIONID VARCHAR(36) COMMENT'专业',
	CAMPUSID VARCHAR(36) COMMENT '校区',
	COLLEGEID VARCHAR(36) COMMENT '学院',
	LANGUAGEID VARCHAR(36) COMMENT '语种编码',
	STATUSID VARCHAR(36) COMMENT '状态代码',
	THEORYARRANGEID VARCHAR(36) COMMENT '理论考试安排表',
	OPERATEARRANGEID VARCHAR(36) COMMENT '上机考试安排表',
	INSTITUTIONID VARCHAR(36) COMMENT '学生所属机构编码(学校编码)',
	REMARK VARCHAR(400) COMMENT '备注'
)

DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
CREATE INDEX INDEX_STUDENT_IDNUM ON EX_STUDENT(IDNUM);
CREATE INDEX INDEX_STUDENT_EXAMNUM ON EX_STUDENT(EXAMNUM);
CREATE INDEX INDEX_STUDENT_STUDENTNUM ON EX_STUDENT(STUDENTNUM);
ALTER TABLE EX_STUDENT ADD CONSTRAINT FK_STUDENT_CAMPUSID FOREIGN KEY(CAMPUSID) REFERENCES EX_CAMPUS(ID);
ALTER TABLE EX_STUDENT ADD CONSTRAINT FK_STUDENT_COLLEGEID FOREIGN KEY(COLLEGEID) REFERENCES EX_COLLEGE(ID);
ALTER TABLE EX_STUDENT ADD CONSTRAINT FK_STUDENT_PROFESSIONID FOREIGN KEY(PROFESSIONID) REFERENCES EX_PROFESSION(ID);
ALTER TABLE EX_STUDENT ADD CONSTRAINT FK_STUDENT_LANGUAGEID FOREIGN KEY(LANGUAGEID) REFERENCES EX_LANGUAGE(ID);
ALTER TABLE EX_STUDENT ADD CONSTRAINT FK_STUDENT_INSTITUTIONID FOREIGN KEY(INSTITUTIONID) REFERENCES EX_INSTITUTION(ID);
ALTER TABLE EX_STUDENT ADD CONSTRAINT FK_STUDENT_THEORYARRANGEID FOREIGN KEY(THEORYARRANGEID) REFERENCES EX_ARRANGEMENT(ID);
ALTER TABLE EX_STUDENT ADD CONSTRAINT FK_STUDENT_OPERATEARRANGEID FOREIGN KEY(OPERATEARRANGEID) REFERENCES EX_ARRANGEMENT(ID);
ALTER TABLE EX_STUDENT ADD CONSTRAINT FK_STUDENT_STATUSID FOREIGN KEY(STATUSID) REFERENCES EX_STUDENTSTATUS(ID);
################################
CREATE TABLE EX_MAINMENU
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	MENUID VARCHAR(40) NOT NULL COMMENT '菜单ID',
	SHOWNAME VARCHAR(100) COMMENT '菜单显示名称',
	ONCLICKSCRIPT VARCHAR(1000) COMMENT '单击脚本',
	SORTINDEX INT COMMENT '排序索引',
	ROLEID VARCHAR(36) COMMENT '角色',
	MAINMENUID VARCHAR(36) COMMENT '父菜单ID'
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;
ALTER TABLE EX_MAINMENU ADD UNIQUE(MENUID);
ALTER TABLE EX_MAINMENU ADD CONSTRAINT FK_MAINMENU_ROLEID FOREIGN KEY(ROLEID) REFERENCES EX_ROLE(ID);
ALTER TABLE EX_MAINMENU ADD CONSTRAINT FK_EX_MAINMENU_MAINMENUID FOREIGN KEY(MAINMENUID) REFERENCES EX_MAINMENU(ID);
################################
CREATE TABLE EX_PARAMETER
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY COMMENT 'UUID',
	NAME VARCHAR(100) COMMENT '参数名称',
	PARAMVALUE VARCHAR(100) COMMENT '参数值',
	PARAMTYPE VARCHAR(100) COMMENT '参数类型',
	ENUMVALUE VARCHAR(100) COMMENT '参数枚举值',
	MEMO VARCHAR(100) COMMENT '备注'
)
DEFAULT CHARSET=utf8,
ENGINE=InnoDB;